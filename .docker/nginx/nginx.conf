user nginx;

worker_processes auto;

worker_rlimit_nofile 10240;

# Leave this empty for now
events {}

http {
	log_format  main  '$remote_addr - $proxy_add_x_forwarded_for [$time_local] "$request" $status $body_bytes_sent $cookie_iRegionSectionid "$http_referer" "$http_user_agent" $request_length $request_time $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $host';

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''        close;
	}

	upstream grpcservers {
		least_conn;
		keepalive 32;
		# The docker endpoint of your grpc servers, you can have multiple here
		server app_1:8081;
        server app_2:8181;
	}

	server {
		listen 1443 backlog=8192 http2;

		access_log /dev/stdout main;

		# Create a certificate that points to the hostname, e.g. nginx for docker
		# $ openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -subj '/CN=nginx'
		#ssl_certificate     /run/secrets/nginx.cert;
		#ssl_certificate_key /run/secrets/nginx.key;

		location / {
			# Replace localhost:50051 with the address and port of your gRPC server
			# The 'grpc://' prefix is optional; unencrypted gRPC is the default
			grpc_pass grpc://grpcservers;
		}
	}
}